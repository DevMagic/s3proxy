name: Node CI
on: [push, pull_request]
jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: security audit, fail for critical findings
        run: |
          npm audit --audit-level critical
  build:
    runs-on: ubuntu-latest
    needs: audit
    strategy:
      matrix:
        node-version: [14, 16]
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: install
        run: |
          npm install
      - name: test
        run: |
          make test
  functional-tests:
    runs-on: ubuntu-latest
    env:
      # https://docs.docker.com/engine/security/trust/trust_automation/
      DOCKER_CONTENT_TRUST: 0
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: install
        run: |
          npm install artillery artillery-plugin-expect
      - name: functional-test
        run: |
          make -j --output-sync=target functional-test
      - name: Scan image for security issues
        uses: Azure/container-scan@v0
        env:
          # Skip `won't fix` CVEs
          # See https://github.com/Azure/container-scan/issues/61
          TRIVY_IGNORE_UNFIXED: true
        with:
          image-name: s3proxy:test
          severity-threshold: HIGH
          run-quality-checks: true
      - name: scan container
        run: |
          docker --version
          docker scan s3proxy:test || exit 0
