name: Node CI
on: [push]
jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: security audit, fail for critical findings
        run: |
          npm audit --audit-level critical
  build:
    runs-on: ubuntu-latest
    needs: audit
    strategy:
      matrix:
        node-version: [14, 16]
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          make test
      - name: test sam-app
        run: |
          cd examples/sam-app
          sam build
          sam local invoke -e events/event.json
          cd s3proxy
          npm install
          npm run build --if-present
          npm test
  functional-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: install
        run: |
          npm install
      - name: artillery
        run: |
          npm run artillery-ci
      - name: package module into tarball
        run: | 
          npm run package
      - name: test package via docker
        run: |
          npm run artillery-docker
